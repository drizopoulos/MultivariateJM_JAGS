{
    "contents" : "haem <- read.csv(paste(root, \"Data/haem.csv\", sep = \"\"))\nhaem <- haem[c(\"id\", \"haematocrit\", \"yearse\", \"gender\", \"weight\", \"age\", \"failure\", \n               \"Time\")]\nnames(haem) <- c(\"id\", \"haematocrit\", \"yearseHAEM\", \"gender\", \"weight\", \"age\", \"failure\", \n                 \"Time\")\nhaem$haematocrit <- 100 * haem$haematocrit\n#\nprot <- read.csv(paste(root, \"Data/PROT-New.csv\", sep = \"\"))\nprot$proteinuriaN <- as.numeric(prot$proteinuria >= 1)\nprot$proteinuria <- factor(prot$proteinuria >= 1, levels = c(TRUE, FALSE), \n                           labels = c(\"prot\", \"no prot\"))\nprot <- prot[c(\"PATID\", \"proteinuria\", \"proteinuriaN\", \"yearse\", \"failure\", \"followyear\")]\nnames(prot) <- c(\"id\", \"proteinuria\", \"proteinuriaN\", \"yearsePROT\", \"failure\", \"Time\")\n#\ngfr <- read.csv(paste(root, \"Data/GFR-New.csv\", sep = \"\"))\nnames(gfr) <- c(\"id\", \"failure\", \"failure10\", \"yearseGFR\", \"gfr\", \"Time\")\ngfr <- gfr[c(\"id\", \"gfr\", \"yearseGFR\", \"failure\", \"Time\")]\n\n\nind.gfr <- gfr$id %in% unique(haem$id)\ngfr <- gfr[ind.gfr, ]\ngfr <- gfr[order(gfr$id, gfr$yearseGFR), ]\nind.prot <- prot$id %in% unique(haem$id)\nprot <- prot[ind.prot, ]\nprot <- prot[order(prot$id, prot$yearsePROT), ]\nhaem <- haem[order(haem$id, haem$yearseHAEM), ]\n\n# weight\nsp <- sapply(split(haem$weight, haem$id), \"[\", 1)\nprot$weight <- rep(sp, tapply(prot$id, prot$id, length))\ngfr$weight <- rep(sp, tapply(gfr$id, gfr$id, length))\n# age\nsp <- sapply(split(haem$age, haem$id), \"[\", 1)\nprot$age <- rep(sp, tapply(prot$id, prot$id, length))\ngfr$age <- rep(sp, tapply(gfr$id, gfr$id, length))\n# gender\nsp <- sapply(split(haem$gender, haem$id), \"[\", 1)\nprot$gender <- rep(sp, tapply(prot$id, prot$id, length))\ngfr$gender <- rep(sp, tapply(gfr$id, gfr$id, length))\n# Time\nsp <- sapply(split(gfr$Time, gfr$id), \"[\", 1)\nhaem$Time <- rep(sp, tapply(haem$id, haem$id, length))\n\ngfr$id <- factor(gfr$id)\nhaem$id <- factor(haem$id)\nprot$id <- factor(prot$id)\ngfr <- gfr[!is.na(gfr$gfr), ]\nhaem <- haem[!is.na(haem$haematocrit), ]\nprot <- prot[!is.na(prot$proteinuria), ]\n\nsp <- split(haem, haem$id)\nlsp <- lapply(sp, function (x) x[x$yearseHAEM < x$Time, ]) \nhaem <- do.call(\"rbind\", lsp)\nsp <- split(gfr, gfr$id)\nlsp <- lapply(sp, function (x) x[x$yearseGFR < x$Time, ]) \ngfr <- do.call(\"rbind\", lsp)\nsp <- split(prot, prot$id)\nlsp <- lapply(sp, function (x) x[x$yearsePROT < x$Time, ]) \nprot <- do.call(\"rbind\", lsp)\n\nrow.names(prot) <- seq_len(nrow(prot))\nrow.names(haem) <- seq_len(nrow(haem))\nrow.names(gfr) <- seq_len(nrow(gfr))\n\nsurv <- data.frame(\n    id = names(tapply(gfr$id, gfr$id, \"[\", 1)),\n    Time = tapply(gfr$Time, gfr$id, \"[\", 1),\n    failure = tapply(gfr$failure, gfr$id, \"[\", 1),\n    weight = tapply(gfr$weight, gfr$id, \"[\", 1),\n    age = tapply(gfr$age, gfr$id, \"[\", 1),\n    gender = factor(tapply(gfr$gender, gfr$id, \"[\", 1), levels = 1:2, \n                    labels = c(\"female\", \"male\"))\n)\n\nrm(ind.gfr, ind.prot, lsp, sp)\n\n# Gauss-Kronrod\nsk <- c(-0.949107912342758524526189684047851, -0.741531185599394439863864773280788, \n        -0.405845151377397166906606412076961, 0, 0.405845151377397166906606412076961, \n        0.741531185599394439863864773280788, 0.949107912342758524526189684047851, \n        -0.991455371120812639206854697526329, -0.864864423359769072789712788640926, \n        -0.586087235467691130294144838258730, -0.207784955007898467600689403773245, \n        0.207784955007898467600689403773245, 0.586087235467691130294144838258730, \n        0.864864423359769072789712788640926, 0.991455371120812639206854697526329)\n\nwk <- c(0.063092092629978553290700663189204, 0.140653259715525918745189590510238, \n        0.190350578064785409913256402421014, 0.209482141084727828012999174891714, \n        0.190350578064785409913256402421014, 0.140653259715525918745189590510238, \n        0.063092092629978553290700663189204, 0.022935322010529224963732008058970, \n        0.104790010322250183839876322541518, 0.169004726639267902826583426598550, \n        0.204432940075298892414161999234649, 0.204432940075298892414161999234649, \n        0.169004726639267902826583426598550, 0.104790010322250183839876322541518, \n        0.022935322010529224963732008058970)\n\n###########################################################################################################\n###########################################################################################################\n###########################################################################################################\n\nlibrary(\"splines\")\nN <- length(unique(gfr$id))\nK <- 15\nQ <- 4\nnk1 <- 3\nnk2 <- 3\nnk3 <- 3\noffset1 <- with(gfr, as.vector(c(1, 1 + cumsum(tapply(id, id, length)))))\noffset2 <- with(haem, as.vector(c(1, 1 + cumsum(tapply(id, id, length)))))\noffset3 <- with(prot, as.vector(c(1, 1 + cumsum(tapply(id, id, length)))))\ny1 <- gfr$gfr\ny2 <- haem$haematocrit\ny3 <- prot$proteinuriaN\n#\nTime <- as.vector(surv$Time)\nevent <- as.vector(surv$failure)\nW <- cbind(surv$age, 1*(surv$gender == \"male\"), surv$weight); ncW <- ncol(W)\nqs <- quantile(Time[event == 1], seq(0, 1, len = Q + 1), names = FALSE)[-c(1, Q + 1)]\nqs <- c(0, qs, max(Time) + 1)\nind <- findInterval(Time, qs, rightmost.closed = TRUE)\nD <- matrix(0, length(ind), Q)\nD[cbind(seq_along(ind), ind)] <- 1\nD <- D * event\nTiq <- outer(Time, qs, pmin)\nLo <- Tiq[, 1:Q]\nUp <- Tiq[, 2:(Q+1)]\nT <- Up - Lo\nP <- T / 2\nP1 <- (Up + Lo) / 2\nst <- matrix(0, N, K*Q)\nskQ <- rep(sk, Q)\nfor (i in 1:N) {\n    st[i, ] <- rep(P[i, ], each = K) * skQ + rep(P1[i, ], each = K)\n}\n#\nTimes1 <- gfr$yearseGFR\nTimes2 <- haem$yearseHAEM\nTimes3 <- prot$yearsePROT\nNS1 <- ns(Times1, nk1)\nNS2 <- ns(Times2, nk1)\nNS3 <- ns(Times3, nk1)\nX1 <- cbind(1, gfr$age, 1*(gfr$gender == \"male\"), gfr$weight, NS1); ncX1 <- ncol(X1)\nX2 <- cbind(1, haem$age, 1*(haem$gender == \"male\"), haem$weight, NS2); ncX2 <- ncol(X2)\nX3 <- cbind(1, prot$age, 1*(prot$gender == \"male\"), prot$weight, NS3); ncX3 <- ncol(X3)\nZ1 <- cbind(1, NS1); ncZ1 <- ncol(Z1)\nZ2 <- cbind(1, NS2); ncZ2 <- ncol(Z2)\nZ3 <- cbind(1, NS3); ncZ3 <- ncol(Z3)\nNSt1 <- ns(Time, knots = attr(NS1, \"knots\"), Boundary.knots = attr(NS1, \"Boundary.knots\"))\nNSt2 <- ns(Time, knots = attr(NS2, \"knots\"), Boundary.knots = attr(NS2, \"Boundary.knots\"))\nNSt3 <- ns(Time, knots = attr(NS3, \"knots\"), Boundary.knots = attr(NS3, \"Boundary.knots\"))\nX1t <- cbind(1, surv$age, 1*(surv$gender == \"male\"), surv$weight, NSt1)\nX2t <- cbind(1, surv$age, 1*(surv$gender == \"male\"), surv$weight, NSt2)\nX3t <- cbind(1, surv$age, 1*(surv$gender == \"male\"), surv$weight, NSt3)\nZ1t <- cbind(1, NSt1)\nZ2t <- cbind(1, NSt2)\nZ3t <- cbind(1, NSt3)\n\nNSs1 <- ns(c(t(st)), knots = attr(NS1, \"knots\"), Boundary.knots = attr(NS1, \"Boundary.knots\"))\nNSs2 <- ns(c(t(st)), knots = attr(NS2, \"knots\"), Boundary.knots = attr(NS2, \"Boundary.knots\"))\nNSs3 <- ns(c(t(st)), knots = attr(NS3, \"knots\"), Boundary.knots = attr(NS3, \"Boundary.knots\"))\nX1s <- cbind(1, surv$age, 1*(surv$gender == \"male\"), surv$weight, NSs1)\nX2s <- cbind(1, surv$age, 1*(surv$gender == \"male\"), surv$weight, NSs2)\nX3s <- cbind(1, surv$age, 1*(surv$gender == \"male\"), surv$weight, NSs3)\nZ1s <- cbind(1, NSs1)\nZ2s <- cbind(1, NSs2)\nZ3s <- cbind(1, NSs3)\n\nknots1 <- quantile(Times1, seq(0.05, 0.95, length = nk1))\nknots2 <- quantile(Times2, seq(0.05, 0.95, length = nk2))\nknots3 <- quantile(Times3, seq(0.05, 0.95, length = nk3))\n\nData <- list(\n    qs = qs,\n    N = N, R = 8, C = 5000, Q = Q, gap = 2,\n    ncX1 = ncX1, ncX2 = ncX2, ncX3 = ncX3,\n    ncZ1 = ncZ1, ncZ2 = ncZ2, ncZ3 = ncZ3,\n    nk1 = nk1, nk2 = nk2, nk3 = nk3,\n    aeq.tau1 = 2, aeq.tau2 = 2, aeq.tau3 = 2,\n    offset1 = offset1, offset2 = offset2, offset3 = offset3,\n    y1 = y1, y2 = y2, y3 = y3,\n    X1 = X1, X2 = X2, X3 = X3,\n    X1t = X1t, X2t = X2t, X3t = X3t,\n    X1s = X1s, X2s = X2s, X3s = X3s,\n    Z1 = Z1, Z2 = Z2, Z3 = Z3,\n    Z1t = Z1t, Z2t = Z2t, Z3t = Z3t,\n    Z1s = Z1s, Z2s = Z2s, Z3s = Z3s,\n    Times1 = Times1, Times2 = Times2, Times3 = Times3,\n    knots1 = knots1, knots2 = knots2, knots3 = knots3,\n    Diff1 = diff(range(Times1)), Diff2 = diff(range(Times2)), Diff3 = diff(range(Times3)),\n    start1 = min(Times1), start2 = min(Times2), start3 = min(Times3),\n    Time = Time, T = T, D = D, Lo = Lo, Up = Up, P = P, zeros = rep(0, N),\n    W = W, ncW = ncW, K = 15,\n    sk = sk, wk = wk,\n    priorMean.betas1 = rep(0, ncX1), \n    priorTau.betas1 = diag(rep(0.001, ncX1)), priorA.tau1 = 0.1, priorB.tau1 = 0.1,\n    priorMean.betas2 = rep(0, ncX2), \n    priorTau.betas2 = diag(rep(0.001, ncX2)), priorA.tau2 = 0.1, priorB.tau2 = 0.1,\n    priorMean.betas3 = rep(0, ncX2), \n    priorTau.betas3 = diag(rep(0.001, ncX3)),\n    priorMean.gammas = rep(0, ncW),\n    priorTau.gammas = diag(rep(0.01, ncW)),\n    priorMean.alphas = rep(0, 3), priorTau.alphas = diag(rep(0.001, 3)),\n    priorA.xi = rep(0.1, Q), priorB.xi = rep(0.1, Q), priorK.D = 15,\n    priorA.rho = 2, priorB.rho = 0.1\n)\n\n\ngrb <- ls()\ngrb <- grb[-match(c(\"Data\", \"root\"), grb)]\nrm(list = c(grb, \"grb\"))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngc()\n",
    "created" : 1446146053327.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2339885750",
    "id" : "ADEC4FF2",
    "lastKnownWriteTime" : 1446146664,
    "path" : "C:/Users/Dimitris/Documents/PackagesGitHub/MultivariateJM_JAGS/Rpgm/PrepareData.R",
    "project_path" : "Rpgm/PrepareData.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}